
@{
    ViewData["Title"] = "Focus Page";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            background-color: #25232A;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
        }

        .menu-icon {
            width: 50px;
            height: 50px;
            cursor: pointer;
        }

        .menu-icon img {
            width: 50px;
            height: 50px;
        }

        .user-icon {
            width: 70px;
            height: 70px;
            cursor: pointer;
        }

        .user-icon img {
            width: 70px;
            height: 70px;
        }

        .page-title-container {
            width: 240px;
            height: 80px;
            background: rgba(137, 26, 26, 0);
            box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25);
            border-radius: 12px;
            border: 5px solid #5CF26B;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .page-title {
            font-size: 30px;
            color: white;
            margin-left: 10px;
        }

        .content {
            padding: 20px;
        }

        .photo-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .photo-container img {
            width: 378px; 
            height: 128px; 
            object-fit: cover; 
            margin: 25px; 
        }

        .center-container {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .center-container img {
            width: 50px;
            height: 50px;
            margin-right: 50px;
        }
        .slider-container {
            margin-left: 10px; 
            text-align: center; 
        }

        .volume-label {
            font-size: 20px;
            color: white;
        }

        .volume-slider {
            -webkit-appearance: none;
            width: 200px;
            height: 30px; 
            background: #313131;
            outline: none;
            opacity: 1;
            transition: opacity .2s;
            border-radius: 10px;
        }

        .volume-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 15px;
            height: 15px;
            background: #;
            cursor: pointer;
            border-radius: 0%;
        }

        .volume-slider::-webkit-slider-runnable-track {
            width: 100%;
            height: 100%;
            background: linear-gradient(to right, white 0%, white 0%, transparent 0%, transparent 100%);
            border-radius: 10px;
        }

        .volume-slider::-moz-range-track {
            width: 100%;
            height: 100%;
            border-radius: 10px;
        }

        .volume-slider:hover {
            opacity: 1;
        }
           
        .photo-container img {
            transition: transform 0.3s ease; 
        }

        .enlarged {
            transform: scale(1.1); 
        }
    </style>
</head>

<body>
    <div class="header">
        <div class="menu-icon" onclick="openNavigation()">
            <img src="~/images/menu_icon.png" alt="Menu Icon" />
        </div>
        <div class="page-title-container">
            <div class="page-title">Focus</div>
        </div>
        <div class="user-icon" onclick="openUserInfo()">
            <img src="~/images/user_image.png" alt="User Icon" />
        </div>
    </div>
   
    <div class="center-container">
        <img id="playButton" src="~/images/play.png" alt="play icon" onclick="toggleSoundEffects()" />
        <div class="slider-container">
            <div class="volume-label">Master Volume</div>
            <input type="range" min="0" max="100" value = "50" class="volume-slider" id="mySlider">
        </div>
    </div>

    <div class="photo-container">
        <img src="~/images/cafeImage.png" alt="Cafe" onclick="playMusic('cafeSound', this)">
        <img src="~/images/rainImage.png" alt="Rain" onclick="playMusic('rainSound', this)">
        <img src="~/images/fireplaceImage.png" alt="Camp Fire" onclick="playMusic('campFireSound', this)">
        <img src="~/images/nightCricketsImage.png" alt="Night Crickets" onclick="playMusic('nigthCricketsSound', this)">
        <img src="~/images/trainImage.png" alt="Train" onclick="playMusic('trainSound', this)">
        <img src="~/images/windImage.png" alt="Wind" onclick="playMusic('windSound', this)">
    </div>

    <audio id="cafeSound" src="~/audios/cafe.mp3"></audio>
    <audio id="campFireSound" src="~/audios/campFire.mp3"></audio>
    <audio id="nigthCricketsSound" src="~/audios/nightCrickets.mp3"></audio>
    <audio id="rainSound" src="~/audios/rain.mp3"></audio>
    <audio id="trainSound" src="~/audios/train.mp3"></audio>
    <audio id="windSound" src="~/audios/wind.mp3"></audio>

    <script>
        let currentAudio = null;
        let playButtonState = false;
        let currentImage = null;
        const slider = document.getElementById("mySlider");
        slider.value = 50;

        window.addEventListener('load', function () {
            updateSliderBackground();
        });

        function playMusic(audioId, image) {
            var audio = document.getElementById(audioId);
            currentImage = image;
            if (audio.paused) {
                transformImage(image, true);
                changePlayButtonState();
                currentAudio = audio;
                audio.volume = slider.value/100;
                audio.play();
            } else {
                transformImage(image, false);
                changePlayButtonState();
                audio.pause();
                image.classList.remove('enlarged');
            }
        }

        function toggleSoundEffects() {
            if (currentAudio) {
                if (playButtonState) {
                    changePlayButtonState();
                    currentAudio.pause();
                    currentImage.classList.remove('enlarged');
                } else {
                    changePlayButtonState();
                    currentAudio.play();
                    currentImage.classList.add('enlarged');
                }
            }
        }

        slider.addEventListener("input", function () {
            const value = (slider.value - slider.min) / (slider.max - slider.min);
            console.log(value);
            if (currentAudio) {
                currentAudio.volume = value;
                updateSliderBackground();
            }
        });

        function transformImage(image, flag) {
            if (flag) {
                image.classList.add('enlarged');
            } else {
                image.classList.remove('enlarged');
            }
        }

        function updateSliderBackground() {
            const value = (slider.value - slider.min) / (slider.max - slider.min) * 100;
            slider.style.background = `linear-gradient(to right, white 0%, white ${value}%, #313131 ${value}%, #313131 100%)`;
        }

        function changePlayButtonState(){
            var targetImage = document.getElementById('playButton');
            if (!playButtonState) {
                targetImage.src = "/images/pause.png";
                playButtonState = true;
            } else {
                targetImage.src = "/images/play.png";
                playButtonState = false;
            }
        }
    </script>
</body>
</html>
